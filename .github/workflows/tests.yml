name: tests.yml

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/back
    strategy:
      matrix:
        java-version: [ 17 ]
    steps:
      - name: Checkout Backend Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4.2.1
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "temurin"
          cache: "maven"
      - name: Cache Maven Dependencies
        uses: actions/cache@v4.0.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-m2-
      - name: Install Backend Dependencies and Build Spring Boot Application
        run: mvn package -DskipTests
      - name: Execute Backend Tests
        run: mvn test
      - name: Generate JaCoCo Code Coverage Report
        run: mvn jacoco:report
      - name: Print JaCoCo Report
        run: cat ./target/site/jacoco/jacoco.xml
      - name: Upload JaCoCo Code Coverage Report to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: JaCoCo Code Coverage Report
          path: ./back/target/site/jacoco/
      - name: Upload Backend Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Backend Build Artifacts
          path: ./back/target/
      - name: Analyze with SonarCloud
        run: mvn sonar:sonar -Pcoverage -Dsonar.coverage.jacoco.xmlReportPaths=./back/target/site/jacoco/jacoco.xml
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/front
    strategy:
      matrix:
        node-version: [ 14.15.0, 16.10.0 ]
    steps:
      - name: Checkout Frontend Code
        uses: actions/checkout@v4
      - name: Set Up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache NPM Dependencies
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-node-
      - name: Install Frontend Dependencies
        run: npm ci
      - name: Build Angular Application
        run: npm run build:prod
      - name: Execute Frontend Tests and Generate Code Coverage Report
        run: npm run test:prod
      - name: Upload Coverage Report to GitHub
        uses: actions/upload-artifact@v4.3.3
        with:
         name: Frontend Coverage Report Node ${{ matrix.node-version }}
         path: ./front/coverage/bobapp/